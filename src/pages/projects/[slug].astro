---
import Layout from "../../layouts/Layout.astro";
import data from "../../../data/projects.json";
import { fade, slide } from "astro:transitions";
export async function getStaticPaths() {
  return data.map((project) => {
    return {
      params: { slug: project.slug },
      props: { project },
    };
  });
}
const { project } = Astro.props;
console.log(project);
---

<Layout title={project.title}>
  <div
    class="hidden fixed top-0 left-0 w-full h-full bg-black/90 z-50 modal flex"
  >
    <span
      class="close absolute top-4 right-9 text-gray-100 text-5xl font-bold hover:text-gray-400 cursor-pointer transition-all duration-300"
      >&times;</span
    >
    <div
      class="m-auto w-full max-w-3xl transition ease-in-out overflow-hidden rounded-2xl"
    >
      <img class="modal-content w-full" />
    </div>
  </div>

  <div id="home"></div>
  <nav class="bg-primary1 w-full h-20 z-40 sticky top-0">
    <div class="bg-primary1 grid w-full px-12 h-full">
      <a
        class="ml-4 flex items-center text-offwhite text-2xl font-normal max-w-fit font-bodyfont col-start-1 max-h-ful"
        href="/"
      >
        LWJ
      </a>
      <div
        id="end_of_nav"
        class="flex flex-row-reverse items-center col-start-2"
      >
        <div id="nav_links">
          <ul
            class="flex justify-between items-center [&>li]:pl-3 [&>*]:text-primary2"
          >
            <li>
              <a href="/#home">HOME</a>
            </li>
            <li>
              <a href="/#projects">PROJECTS</a>
            </li>
            <li>
              <a href="/#about">ABOUT</a>
            </li>
            <li>
              <a href="/contact">SKILL & TECH</a>
            </li>
            <li>
              <a href="/#">CV</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div
      class="scrollIndicator h-0.5 self-end -ml-12 bg-white/20 col-span-2 hidden"
    >
      <div class="progress bg-accent1 h-full"></div>
    </div>
  </nav>
  <section
    class="grid grid-cols-12 grid-rows-[min-content_min-content_min-content] lg:grid-rows-[min-content_min-content] pl-16 lg:pl-48
    pr-10 lg:pr-32 mt-8"
  >
    <h2
      class="row-start-1 text-5xl col-span-full border-b-2 border-project_gradient mb-8"
    >
      {project.name}
    </h2>
    <div
      class="grid row-start-2 col-start-1 col-span-12 lg:col-span-5 content-center w-full mb-6"
    >
      <p>{project.description_long}</p>
    </div>
    <div
      class="row-start-3 lg:row-start-2 col-start-1 lg:col-start-7 col-span-full max-w-[630px] [&>img]:rounded-2xl overflow-hidden grid grid-cols-2 grid-rows-2 gap-4 min-w-[300px]"
    >
      <p>
        {
          project.images.map((image) => {
            return <img src="" alt="" />;
          })
        }
      </p>
      <!-- <img
              class="cursor-pointer w-full"
              src={`../../../assets/${image.path}`}
              alt=""
              id={image.id}
            /> -->
    </div>
  </section>
</Layout>

<script is:inline>
const close = document.querySelector(".close");
const modalContent = document.querySelector(".modal-content");
close.addEventListener("click", () => {
  close.parentElement.classList.add("hidden");
});
const allImg = document.querySelectorAll("img");
const allImgSpread = { ...allImg };
console.log(allImgSpread);
allImg.forEach((img) => {
  img.addEventListener("click", () => {
    close.parentElement.classList.remove("hidden");
    console.log();
    modalContent.setAttribute(
      "src",
      `../../../assets/${img.src.substring(img.src.lastIndexOf("/") + 1)}`
    );
  });
});
</script>
