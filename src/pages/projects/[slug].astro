---
import Layout from "../../layouts/Layout.astro";
import Skills from "../../../data/skills.json";
import { fade, slide } from "astro:transitions";
import Footer from "../../components/Footer.astro";
import data from "../../../data/projects.json"

export async function getStaticPaths() {
  //   const data = await fetch('../../../data/projects.json').then(response => response.json());
  return data.map((project) => {
    return {
      params: { slug: project.slug },
      props: { project },
    };
  });
}
const { project } = Astro.props;
console.log(project.tech_stack);
---

<Layout title={project.title}>
  <div
    class="hidden fixed top-0 left-0 w-full h-full bg-black/90 z-50 modal flex"
  >
  
    <span
      class="close absolute top-4 right-9 text-gray-100 text-5xl font-bold hover:text-gray-400 cursor-pointer transition-all duration-300"
      >&times;</span
    >
    
    <div
      class="m-auto w-full max-w-3xl transition ease-in-out h-fit relative"
    >
     <img class="modal-content w-full rounded-t-lg" />
    <a class="prev transition ease-in-out duration-200  hover:bg-black/80 cursor-pointer absolute top-[50%] -left-[10%]  xl:-left-[20%] w-auto p-4 -mt-12 text-white font-bold text-4xl rounded-2xl">❮</a>
  <a class="next transition ease-in-out duration-200  hover:bg-black/80 cursor-pointer absolute top-[50%] -right-[10%]  xl:-right-[20%] w-auto p-4 -mt-12 text-white font-bold text-4xl  rounded-2xl">❯</a>

    <div class="caption-container text-center bg-[#222] px-1 py-4 text-white absolute -bottom-[10%] w-full z-50 rounded-b-lg">
    <p id="caption"></p>
  </div>
     
    </div>
  </div>

  <div id="home"></div>
  <nav class="bg-primary1 w-full h-20 z-40 sticky top-0">
    <div class="bg-primary1 grid w-full px-12 h-full">
      <a
        class="ml-4 flex items-center text-offwhite text-2xl font-normal max-w-fit font-bodyfont col-start-1 max-h-ful"
        href="/"
      >
        LWJ
      </a>
      <div
        id="end_of_nav"
        class="hidden md:flex flex-row-reverse items-center col-start-2"
      >
        <div id="nav_links">
          <ul
            class="flex justify-between items-center [&>li]:pl-3 [&>*]:text-primary2"
          >
            <li>
              <a href="/#home">HOME</a>
            </li>
           <li class="projects_menu">
              <a class="text-accent1" href="#projects">PROJECTS</a>
              <div class="absolute w-fit hidden transition ease-in-out duration-1000">
                <ul
                  class="bg-white w-full text-black [&>a]:p-2 rounded-md overflow-hidden [&>a]:cursor-pointer flex flex-col [&>a]:text-left [&>a]:min-w-full "
                >
                  {
                    data.map((dataproject, index) => {
                      return data.length === index + 1 ? (
                        <a href=`/projects/${dataproject.slug}` class={project.name === dataproject.name ? `border bg-gray-300 transition ease-in-out duration-300`:`border hover:bg-gray-300 transition ease-in-out duration-300`}>
                          {dataproject.name}
                        </a>
                      ) : (
                        <a href=`/projects/${dataproject.slug}` class={project.name === dataproject.name ? `border-t border-x bg-gray-300 transition ease-in-out duration-300`:`border-t border-x hover:bg-gray-300 transition ease-in-out duration-300`}>
                          {dataproject.name}
                        </a>
                      );
                    })
                  }
                </ul>
              </div>
            </li>
            <li>
              <a href="/#about">ABOUT</a>
            </li>
            <li>
              <a href="/contact">SKILL & TECH</a>
            </li>
            <li>
              <a href="../../assets/CV.pdf" download class="nav_link transition ease-in-out duration-200">CV</a>
            </li>
          </ul>
        </div>
      </div>
       <div class="flex md:hidden col-start-2 items-center place-content-end cursor-pointer burgerMenu"> 
        <svg viewBox="0 0 100 80" width="40" height="40" class="text-white">
          <rect fill="white" class="one" width="100" height="3"></rect>
          <rect fill="white" class="two"y="30" width="100" height="3"></rect>
          <rect fill="white" class="three" y="60" width="100" height="3"></rect>
        </svg>
      </div>
    </div>
    <div
      class="scrollIndicator h-0.5 self-end -ml-12 bg-white/20 col-span-2 hidden"
    >
      <div class="progress bg-accent1 h-full"></div>
    </div>
          
    </div>
     
        <div class="h-screen w-fit px-8 bg-primary1 border-l border-white absolute top-0 right-0 transition-transform translate-x-full slideMenu hidden">
          <span
      class="closeSlide absolute top-0 right-4 text-gray-100 text-4xl  hover:text-gray-400 cursor-pointer transition-all duration-300"
      >&times;</span>
      <div class="nav_links">
          <ul class="flex flex-col justify-between items-center [&>li]:pl-3 [&>*]:text-primary2 [&>li]:min-w-full [&>li]:p-4 mt-14 [&>li]:flex [&>li]:items-center [&>li]:justify-center">
            <li>
              <a href="#home" class="nav_link transition ease-in-out duration-200">HOME</a>
            </li>
            <li  class="projects_menu relative">
              <a href="#projects" class="nav_link transition ease-in-out duration-200">PROJECTS</a>
               <div class="absolute -left-28 w-fit hidden top-4 z-50">
                <ul
                  class="bg-white w-full text-black [&>a]:p-2 rounded-md overflow-hidden [&>a]:cursor-pointer flex flex-col [&>a]:text-left [&>a]:min-w-full  "
                >
                  {
                    data.map((dataproject, index) => {
                      return data.length === index + 1 ? (
                        <a href=`/projects/${dataproject.slug}` class={dataproject.name === project.name ? `border bg-gray-300 transition ease-in-out duration-300`:`border hover:bg-gray-300 transition ease-in-out duration-300`}>
                          {dataproject.name}
                        </a>
                      ) : (
                        <a href=`/projects/${dataproject.slug}` class={dataproject.name === project.name ? `border-t border-x bg-gray-300 transition ease-in-out duration-300`:`border-t border-x hover:bg-gray-300 transition ease-in-out duration-300`}>
                          {dataproject.name}
                        </a>
                      );
                    })
                  }
                </ul>
              </div>
            </li>
            <li>
              <a href="#about" class="nav_link transition ease-in-out duration-200">ABOUT</a>
            </li>
            <li>
              <a href="contact" class="nav_link transition ease-in-out duration-200">SKILL & TECH</a>
            </li>
            <li> 
              <a href="../../assets/CV.pdf" download class="nav_link transition ease-in-out duration-200">CV</a>
              
            </li>
          </ul>
        </div>
        </div>
  </nav>
  <section
    class="grid grid-cols-12 grid-rows-[min-content_min-content_min-content] lg:grid-rows-[min-content_min-content] pl-16 lg:pl-48
    pr-10 lg:pr-32 mt-8 h-[100vh]"
  >
    <h2
      class="row-start-1 text-5xl col-span-full border-b-2 border-project_gradient mb-8"
    >
      {project.name}
    </h2>
    <div
      class="flex flex-col lg:flex-col row-start-2 col-start-1 col-span-12 lg:col-span-5 w-full mb-6 h-fit gap-6 md:flex-row"
    >
    
    <div class="gap-6 flex flex-col">
      
        <p class="place-self-start">{project.description_long}</p>
        <div class="[&>a]:border [&>a]:border-accent1 [&>a]:h-fit [&>a]:w-fit [&>a]:self-end [&>a]:justify-self-center [&>a]:py-2 [&>a]:px-6 [&>a]:rounded-md [&>a]:hover:cursor-pointer [&>a]:bg-white [&>a]:text-primary1 self-start [&>a]:transition [&>a]:ease-in-out [&>a]:duration-200 row-start 1">
          <a class="mr-2 hover:bg-primary1 hover:text-white" href={project.url} target="_blank">Demo</a>
          <a class="hover:bg-primary1 hover:text-white" href={project.github} target="_blank">Github repo</a>
        </div>
    </div>

      <div class="w-full h-fit lg:mt-4 md:mt-0">
      <h3 class="text-4xl">Tech stack</h3>
      <article>
      <ul class="flex flex-wrap">
      {
        project.tech_stack.map((skill) => (
          <li class="w-16 gap-x-4 relative hint">
            <img
              class=" h-full"
              src={`../../assets/skills/${skill.icon}`}
              alt={skill.icon_alt}
            />
            <div class="hidden rounded-lg p-2 bg-primary1 border border-accent1 text-white absolute -bottom-10 flex justify-center w-[100px] left-1/2 transform -translate-x-1/2 ease-in-out duration-200 z-50">
              {skill.name}
              </div>
          </li>
        ))
      }
    </ul>
      </article>
    </div>


    </div>
    <div
      class="row-start-3 lg:row-start-2 col-start-1 lg:col-start-7 col-span-full max-w-[630px] [&>img]:rounded-lg overflow-hidden grid grid-cols-2 grid-row-2 lg:grid-rows-4 gap-4 min-w-[300px]"
    >
      {
        project.images.map((image) => (
          <>
            <img
              class="cursor-pointer w-full project_img"
              src={`../../../assets/${image.path}`}
              alt={image.alt}
              id={image.id}
              data-value={image.caption}
            />
            
          </>
        ))
      }
    </div>
    
  </section>
  <Footer/>
</Layout>

<script is:inline>
const close = document.querySelector(".close");
const modalContent = document.querySelector(".modal-content");
const captionContainer = document.querySelector(".caption-container");
const next = document.querySelector(".next");
const prev = document.querySelector(".prev");
const allImg = document.querySelectorAll(".project_img");
const allImgSpread = [...allImg]
let setImgIndex;
let currentIndex;

// ---------------  Modal pop up ---------------
next.addEventListener("click", nextImg)
prev.addEventListener("click", prevImg)

allImg.forEach((img, i) => {
  img.addEventListener("click", () => {
    console.log(img);
    close.parentElement.classList.remove("hidden");
    setImgIndex = i;
    modalContent.setAttribute(
      "src",
      `../../../assets/${img.src.substring(img.src.lastIndexOf("/") + 1)}`
    );
    captionContainer.innerHTML = img.dataset.value
  });
});

close.addEventListener("click", () => {
  close.parentElement.classList.add("hidden");
});

function nextImg() {
  let nextImg = allImgSpread[setImgIndex === 3 ? setImgIndex = 0 : setImgIndex + 1]
  console.log(nextImg);
  setImgIndex = ++setImgIndex
  modalContent.setAttribute(
    "src",
    `../../../assets/${nextImg.src.substring(nextImg.src.lastIndexOf("/") + 1)}`
  );
  captionContainer.innerHTML = nextImg.dataset.value
}
function prevImg() {
  let prevImg = allImgSpread[setImgIndex === 0 ? setImgIndex = 3 : setImgIndex - 1]
  setImgIndex = --setImgIndex
  modalContent.setAttribute(
    "src",
    `../../../assets/${prevImg.src.substring(prevImg.src.lastIndexOf("/") + 1)}`
  );
  captionContainer.innerHTML = prevImg.dataset.value
}
// ---------------  swipin---------------


var mc = new Hammer(modalContent);
mc.on("swipeleft swiperight", function (ev) {
  console.log(ev.type);
  ev.type === 'swiperight' ? nextImg() : prevImg()
});

myFunction(x); // Call listener function at run time
x.addListener(myFunction); // Attach listener function on state changes



// ---------------  Dropdown menu ---------------

const projectMenus = Array.from(document.querySelectorAll(".projects_menu"))

projectMenus.map((menu) => {
  menu.addEventListener("mouseover", () => {
    menu.lastElementChild.classList.remove("hidden");
  })
})
projectMenus.map((menu) => {
  menu.addEventListener("mouseout", () => {
    menu.lastElementChild.classList.add("hidden");
  })
})

// ---------------  Burger menu ---------------
const burgerMenu = document.querySelector(".burgerMenu")
const slideMenu = document.querySelector(".slideMenu")
const menuClose = document.querySelector(".closeSlide")


burgerMenu.firstElementChild.addEventListener('click', () => {
  slideMenu.style.transform = "translateX(0%)"
  slideMenu.classList.remove("hidden")
})

menuClose.addEventListener('click', () => {
  slideMenu.style.transform = "translateX(100%)"
  slideMenu.classList.add("hidden")
})

// --------------- Nav menu hover---------------
const navLinks = Array.from(document.querySelectorAll(".nav_link"))


for (const link of navLinks) {
  link.addEventListener('mouseover', () => {
    link.classList.add('text-gray-500');
  });

  link.addEventListener('mouseout', () => {
    link.classList.remove('text-gray-500');
  });
}
// --------------- Hint ---------------
const hints = Array.from(document.querySelectorAll('.hint'))
for (const hint of hints) {
  hint.addEventListener('mouseover', () => {
    hint.lastElementChild.classList.remove('hidden')
  })

  hint.addEventListener('mouseout', () => {
    hint.lastElementChild.classList.add('hidden')
  })
}
</script>

